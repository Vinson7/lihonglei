/*jquery和JavaScript常见问题，以及模块整理*/

*************$(选择器).each(function(){return;})不会终止代码问题*************
在遍历过程中通过条件判断从而return，但这只会终止循环，而不会终止遍历模块后面的代码的运行（之前的demo遍历过程中return false，但代码依旧走到ajax的位置，继续提交！）















/*HTML5——CSS3常见问题汇总*/

*************!important*************
ie7,ie8,firefox,chrome等高端浏览器认为被!important修饰的属性级别高， 但是IE6则会有两种情况. 若不在同一个{}内使用，IE6认为!important优先级较高，
否则在同一个{}里的样式覆盖时，IE6认为被!important修饰的css级别较低
ie6中：
#a{width:100 !important;} //有效      #a{width:50px;} //无效
/*样式2*/
#a{width:100px !important; width:50px;} /*width:100px无效，width:50px 有效*/
eg2：最经典的就是IE6不识别min-height
{
    //顺序不要错
    min-height:500px;
    height:auto!important;//如果是一般浏览器：会执行第1行和第2行(由于第2行级别高，第3行不会被执行)；IE6执行：第一行不识别，第二行认为级别低，只会执行第三行，因为在IE6中height等价于min-height,会自动撑开
    height:500px;

}

*************行高line-height？？？*************
1、其实就算是不设置height也可以，只用line-height设置高度即可(前提是：有文本存在，line-height才有效果)，也可以撑开div而内部的文本也是垂直剧中的。
2、如果把字体设置为0px，只要有行高也会撑开div(前提是：有文本存在，line-height才有效果)，那就说明：没有文本的话，行高就没有意义

[IE6下float左边距离加倍]
1、问题：在IE6下如果某个<li>列表使用了float：left属性，同时设置了其外补丁“margin:10px 0 0 10px”可以看出，上边距和左边距同样为10px，但第一个<li>距左边有20px。
2、解决办法：当将其display属性设置为inline时问题就都解决了。
3、说明：这是因为块级对象默认的display属性值是block，当设置了浮动的同时，还设置了它的外边距就会出现这种情况。也许你会问：“为什么第二个对象和第一个对象之间就不存在双倍边距的BUG”？
   因为浮动都有其相对应的对象，只有相对于其父对象的浮动对象才会出现这样的问题。第一个对象是相对父对象的，而第二个对象是相对第一个对象的，所以第二个对象在设置后不会出现问题。
   另外在一些特殊布局中，可能需要组合使用display:block;和display:inline;才能达到预期效果。
   当然最坏的情况下，我们就可以使用"margin:10px 0 0 10px;*margin:10px 0 0 10px;_margin:10px 0 0 5px"，这种“标准属性;*IE7识别属性;_IE6识别属性”HACK方式解决。

*************margin-top的相对问题*************
    <div class="marginTop" style="width:200px;height:200px;background-color: #ffffff;">
        <p style="margin-top:50px;width:50px;height:50px;background-color: #000011">内部margin-top</p>
    </div>
说明：外层的div是没有“content”，“padding”，“border”的，只有宽高值，内部是有宽高的margin-top：50，结果是：内部块没有相对父级移动，而是父级相对其他模块移动了；
原因在于：任何的块级单位的margin都是相对兄弟/父级的“content”，“padding”，“border”的，即必须至少有以上中的一个css才可以。
解决方式：
1.给外层加个padding-top的值，如padding-top:1px;
2.给外层增加overflow:hidden;
2.给id为child的div设置float属性
3.给id为parent的div设置position:relative,id为child的div设置position:absolute; 

*************vertical-align垂直对齐问题*************
IE8+支持 —— display："inline-table"、"run-in"、"table"、"table-caption"、"table-cell"、"table-column"、"table-column-group"、"table-row"、"table-row-group"、 "inherit"。
方法:在任意元素【width+height+display:table-cell;vertical-align: bottom;】这样这个元素的内部不论什么标签都会对齐
    <div id="verticalAlign">
        <p>垂直居中</p>
    </div>
    #verticalAlign
    {
        width:200px;
        height:200px;
        background-color: #005164;
        display:table-cell;
        vertical-align: bottom
    }

*************text-align居中对齐问题*************
text-align:center:这个css只会使纯文本或者内联元素标签相对外层的宽度从而居中，而且具有传递性，假如<div><p>文本</p><div>，div设置了居中有宽度，p有宽度，那么文本会相对p居中，而p不会相对div居中！

*************子元素浮动父级无法被撑开（父级图片做背景时最明显）*************
1.给外层增加overflow:hidden;这样相当于父级紧贴子元素的浮动从而识别子元素的空间大小
2.外层增加float：left;
3.尾部增加一个空的div，css设置为：clear:both
4.利用伪类:after{content:".";height:0;visibility:hidden;display:block;clear:both;}

*************透明不影响子类*************
#bg_opacity{width:300px;height:300px;background: rgba(255,0,0,0.2)}/*前三个参数是RGB的整数，而第4个参数是透明程度*/

*************时间戳*************
第一种方法：var timestamp = Date.parse(new Date());   结果：1280977330000
第二种方法：var timestamp = (new Date()).valueOf();   结果：1280977330748
第三种方法：var timestamp=new Date().getTime()；      结果：1280977330748
第一种：获取的时间戳是把毫秒改成000显示，
第二种和第三种是获取了当前毫秒的时间戳。

*************上下左右居中*************
/*
1.很明显，下面的方式必须知道模块的大小，否则
position: absolute; left: 50%; top: 50%;
margin-top: -250px;   高度的一半
margin-left: -250px;    宽度的一半
2.缺点：兼容性差
 position: absolute; left: 50%; top: 50%;
transform: translate(-50%, -50%);    50%为自身尺寸的一半
*/
{
    width:100px;
    height:100px;
    background-color: #b3d4fc;
    position: absolute; left: 0; top: 0; right: 0; bottom: 0;
    margin:auto;    /* 有了这个就自动上下，左右据中了 */
}


*************placeHolder特性样式修改*************

input::-webkit-input-placeholder,textarea::-webkit-input-placeholder {
	　　color: #4e4e4e !important;
		font-family: "微软雅黑";
　　}
　　input:-moz-placeholder,textarea:-moz-placeholder {
　　	color: #4e4e4e !important;
		font-family: "微软雅黑";
　　}
　　input::-moz-placeholder,textarea::-moz-placeholder {
　　	color: #4e4e4e !important;
		font-family: "微软雅黑";
　　}
　　input:-ms-input-placeholder,textarea:-ms-input-placeholder {
　　	color: #4e4e4e !important;
		font-family: "微软雅黑";
　　}
*************滑出页面的滚动条问题*************
如果点击后滑出某一个新的列表/普通页面，可能出现——滑动当前页面时，会漏出底层页面（底层页面已经出现滚动条，超出屏幕高度），问题在于：当前页面是嵌在底层页面中的，纵然用绝对定位，
然后z-index提高层级，也会导致露底问题；解决的方式：将滑出页面放在底层div的外面，即不要和底层发生耦合关系

*************div中的img会有默认空间*************
<div><img src="img/source/zero/part6.jpg" width="100%"></div>
会出现：div的高度高于图片高度，图片有留白，div无法自适应图片高度
img{vertical-align:top;} /*解决方案1*/
img{display: block} /*解决方案2*/
div{line-height: 0} /*解决方案3*/
















**************H5问题*************
如果有切换动画，而且是侧滑，而且页面中有input表单标签（从右向左/从左到右），不要加autofocus="autofocus"，因为在Android机型当中，
会弹出键盘，而这个键盘会占用空间，从而扰乱页面的宽高的计算。而ios的键盘会浮在上方，不会影响
